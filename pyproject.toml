# pyproject.toml - Modern Python packaging configuration

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "postgres-backup-plugin"
dynamic = ["version"]
description = "Framework-agnostic PostgreSQL backup library with filtering support"
readme = "README.md"
requires-python = ">=3.7"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = [
    "postgresql", "postgres", "backup", "database", "sql", "copy",
    "django", "filter", "export", "s3", "restore", "dump"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: Database",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: System :: Archiving :: Backup",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Framework :: Django",
    "Framework :: Django :: 3.0",
    "Framework :: Django :: 4.0",
]

dependencies = [
    "psycopg2-binary>=2.8.0",
]

[project.optional-dependencies]
s3 = ["boto3>=1.20.0"]
django = ["django>=3.0"]
all = ["boto3>=1.20.0", "django>=3.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "pytest-mock>=3.10.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.990",
    "isort>=5.10.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/postgres-backup-plugin"
Documentation = "https://github.com/yourusername/postgres-backup-plugin#readme"
Repository = "https://github.com/yourusername/postgres-backup-plugin"
"Source Code" = "https://github.com/yourusername/postgres-backup-plugin"
"Bug Tracker" = "https://github.com/yourusername/postgres-backup-plugin/issues"
Changelog = "https://github.com/yourusername/postgres-backup-plugin/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["postgres_backup_plugin"]

[tool.setuptools.dynamic]
version = {attr = "postgres_backup_plugin.__version__"}

[tool.setuptools.package-data]
postgres_backup_plugin = ["py.typed"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=postgres_backup_plugin",
    "--cov-report=term-missing",
    "--cov-report=html",
]

# mypy configuration
[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

# coverage configuration
[tool.coverage.run]
source = ["postgres_backup_plugin"]
omit = [
    "*/tests/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
